The ``1-my_list`` module
======================

Using ``print_sorted``
----------------------

This is an example text file in reStructuredText format.  First import
``print_sorted`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:
    Test if there's a empty list
    >>> my_list = MyList()
    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []

    Testing for valid input:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    Test for negative numbers:
    >>> my_list = MyList()
    >>> my_list.append(11)
    >>> my_list.append(-6)
    >>> my_list.append(79)
    >>> print(my_list)
    [11, -6, 79]
    >>> my_list.print_sorted()
    [-6, 11, 79]

    Test for if strings are in the list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append("hjhk")
    >>> print(my_list)
    [1, 4, 2, 'hjhk']
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: unorderable types: str() < int()

    Test for if floats are in the list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4.0)
    >>> my_list.append(2.0)
    >>> my_list.append(7.0)
    >>> print(my_list)
    [1, 4.0, 2.0, 7.0]
    >>> my_list.print_sorted()
    [1, 2.0, 4.0, 7.0]

    Test for single element:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> print(my_list)
    [1]
    >>> my_list.print_sorted()
    [1]

    Test for incorrct argument:
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> print(my_list)
    [3]
    >>> my_list.print_sorted(8)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    Test for if there's a new list:
    >>> my_list = MyList([1, 8, 2, 9])
    >>> new_list = my_list.print_sorted()
    [1, 2, 8, 9]
    >>> print(my_list)
    [1, 8, 2, 9]
