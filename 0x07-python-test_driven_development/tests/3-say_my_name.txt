The ``3-say_my_name`` module
======================

Using ``say_my_name``
----------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3-say_my_name`` module:

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:
    Test to see if both arguments are strings:
    >>> say_my_name("Timmy", "Butplug")
    My name is Timmy Butplug

    Test to see if only first_name argument is a string:
    >>> say_my_name("Timmy", 89)
    Traceback (most recent call last):
    TypeError: last_name must be a string

    Test to see if only last_name argument is a string:
    >>> say_my_name(77, "Butplug")
    Traceback (most recent call last):
    TypeError: first_name must be a string

    Test to see if there are no arguments given:
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

    Test to see if only 1 argument for first_name:
    >>> say_my_name("Buck")
    My name is Buck 

    Test to see if only 1 argument for last_name:
    >>> say_my_name(, "Nikky")
    Traceback (most recent call last):
    SyntaxError: invalid syntax
